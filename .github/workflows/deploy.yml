# .github/workflows/deploy.yml
name: Build and Deploy to Homelab

on:
  push:
    branches: [ main ] # Trigger this workflow on pushes to the main branch

jobs:
  build-and-update-manifest:
    runs-on: self-hosted # IMPORTANT: Tells GitHub to use YOUR runner!

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # We need repo access to push the manifest change
          token: ${{ secrets.PAT_TOKEN }} # You'll need to create a Personal Access Token with repo scope

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Provided automatically by GitHub

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v4
        with:
          context: . # Assumes Dockerfile is in the root
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }} # Tag with unique commit ID
          # Optional: Add a 'latest' tag too if needed:
          # tags: |
          #  ghcr.io/${{ github.repository }}:${{ github.sha }}
          #  ghcr.io/${{ github.repository }}:latest

      - name: Update Kubernetes manifest (IMPORTANT GitOps step)
        run: |
          # Assumes your deployment manifest is at k8s/deployment.yaml
          # This command replaces the image line with the newly built one
          sed -i "s|image: ghcr.io/${{ github.repository }}:.*|image: ghcr.io/${{ github.repository }}:${{ github.sha }}|g" k8s/deployment.yaml

      - name: Commit and push manifest changes
        run: |
          git config --global user.name 'GitHub Actions CI'
          git config --global user.email 'ci@github.actions'
          git add k8s/deployment.yaml
          # Only commit if there are changes
          git diff --staged --quiet || git commit -m "Update deployment image to ${{ github.sha }}"
          git push
